# Title: vim

Date: 2014-09-30 15:10
Tags: []
categories: []

---

## Commands

### Helps

* 特殊文字について :
		:h keycodes
* 正規表現 :
		:h atom
		:h regexp
	* 最短一致
			{-}
			\s{-}
* 改行含む文字クラス :
		:h \_
* デフォルトで割り当てられているキーマップ :
		:h index
* EXコマンドヘルプ :
		:h :index
* Exコマンド用の特別な文字
		:h cmdline-special
* 式の文法
		:h expression-syntax

### Startup option

* vimrc やプラグインを無効にする
		vim -u NONE
		vim -u NORC
		vim --noplugin

ref.

	:help starting

### Useful

#### Normal mode

* 代替ファイルと切り替える :
		<C-^>
* 折りたたみ
	* カーソルの下の折りたたみを開く :
			zo
	* カーソルの下の折りたたみを閉じる :
			zc
	* カーソルの下の全ての折りたたみを開く :
			zO
	* カーソルの下の全ての折りたたみを閉じる :
			zC
	* 全ての折りたたみを開く :
			zR
	* 全ての折りたたみを閉じる :
			zM
* 変更リスト中の[count] 個前の位置に移動します
		g;
* 変更リスト中の[count] 個後の位置に移動します
		g,
* キーマップ確認
	* :map " すべて確認
	* :imap " インサートモードだけ
	* :nmap " ノーマルモードだけ
	* :vmap " ヴィジュアルモードだけ
	* :verbose nmap " 定義元ファイル情報も表示

##### Diff系

* 差分モード開始:
		:diffs[plit]
* カレントウィンドウの差分モードを終了(#nはバッファ上の番号を指定):
		:diffo[ff] #n
* 次の差分へ移動:
		]c
* 前の差分へ移動:
		[c
* 相手バッファの内容を取り込む(obtain):
		do
* 自バッファの内容をput:
		dp

#### Others (technique)

* 改行コードを入力 :
		<C-v><C-m>
* 文字コード指定して開く :
		:e ++enc=utf8
* ヘルプファイル作成 :
		:helptags %:h (ヘルプファイルがあるディレクトリに移動して)
* 否定先読み
		/\vhoge(fuga)@!
		※注意!以下はやりたいことができない。(:help @!参照)
		/\vfoo.*(bar)@!
		↓はよく使う
		/\v^\%(.*BAR)@!.*\zsFOO
	* バッファ内、 PATTERN にマッチしない行を REPLACEMENT で置き換える
			:%s/\(PATTERN\)\@!.*/REPLACEMENT/
	* 実用的な例: "bar" を含んでいない行から "foo" を探す: >
			/^\%(.*bar\)\@!.*\zsfoo
* 否定後読み - "foobar" 以外の "bar"
		/\v(foo)@<!bar
* シェル実行結果を読み込む
		:read! ls | grep hoge
* カラムを指定してソート
		:'<,'>sort /.*\%2v/
	* 外部コマンドでソート
			:'<,'>!sort -k 2
			:'<,'>!sort -k 2 -k 3
* バージョンで判定
		if v:version > 700
* 特定のパッチで判定
		if has("patch-7.4.399")
* スペルミスの単語に対し正しいつづりの候補を提案する
		z=
* 行末尾の空白削除
		%s/ *$//

### Rare

* カレントファイルの名前を出力 :
		:echo expand("%") :
* カレントファイルのフルパスを出力 :
		:echo expand("%:p")
* ヘッド(ディレクトリ)
		:echo expand("%:h")
* テイル(ファイル名だけ)
		:echo expand("%:t")
* カレントファイルの名前、拡張子抜きを出力 :
		:echo expand("%:r")
* カレントファイルの拡張子を出力 :
		:echo expand("%:e")

## Options

* 改行コード
		set fileformats?

## Plug-ins

.vimrc参照。

### Vimfiler

* ソート
		S

### Unite

* リフレッシュ
		<C-l> (ただg<C-l>に変更している(window 操作に割り当てているので))

### Alignta

* 単純にパターンの開始位置だけを揃える整列方式
		:Alignta <- hoge
* 空白区切りの要素を整列
		:'<,'>Alignta <<0 \s\S
* 適用回数を指定
		:'<,'>Alignta v/^" <<0 \s\S/2
* 適用範囲をフィルタ
		:'<,'>Alignta v/^" <<0 \s\S

### Emmet for Vim

* リンクタイトル取得
		<C-y>a
* コメントアウトトグル
		<C-y>/

## Vim script

### Map commands

<http://vimblog.hatenablog.com/entry/vimrc_key_mapping>

* モード                                 : 再割当有り : 再割当無し
* ノーマルモード＋ビジュアルモード       : noremap    : map
* コマンドラインモード＋インサートモード : noremap!   : map!
* ノーマルモード                         : nnoremap   : nmap
* ビジュアル(選択)モード                 : vnoremap   : vmap
* コマンドラインモード                   : cnoremap   : cmap
* インサート(挿入)モード                 : inoremap   : imap

## その他

* windowsの右クリックメニューに「gvimで開く」を追加 :
		[HKEY_CLASSES_ROOT] - [*] - [shell]
	[なんでもかんでも Vim で開く (コンテキストメニューの設定) - 腹八分目。](http://d.hatena.ne.jp/masaking/20070803/1186105654)
* モードライン modeline:
		vim:tw=78:norl:
		<!-- vim:set ft=markdown: -->
		" vim:ft=sh:
* :ls結果の記号の見方 TODO
	* a : alternate
	* % : カレントバッファ?
* Ctrlを使うキーバインドまとめ
	[Vim で使える Ctrl を使うキーバインドまとめ - 反省はしても後悔はしない](http://cohama.hateblo.jp/entry/20121023/1351003586)

